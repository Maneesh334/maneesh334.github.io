{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"Parsing medical notes with LLMs","tech":["Python","Gemini","PostgresQL"],"github":"","external":""},"html":"<p>• Developed an application powered by Gemini, that extracts sensitive medical information from doctors notes\r\ncovering a patient’s pregnancy over time.</p>\n<p>• Application is currently being used by doctors and medical students at Stony Brook Hospital.</p>"}},{"node":{"frontmatter":{"title":"LLM-Powered Chat Application for APIs using Kafka and Spark","tech":["Kafka","Spark","Airflow","SQL","PostgresQL","Python","Streamlit","LangChain","GPT-3.5"],"github":"","external":""},"html":"<p>• Built a GPT-powered application to interact with and extract information from SQL databases.</p>\n<p>• Web app built using the streamlit framework. LangChain’s React SQL Agentused to interact with the SQL\r\ndatabase.</p>\n<p>• Data is streamed from API to Kafka topic. Data consumed from Kafka topic, processed and transferred to\r\nPostgreSQL database by Spark job. Apache Airflow used for handling execution of streaming and processing</p>"}},{"node":{"frontmatter":{"title":"Question Paper Generator with LLMs","tech":["Python","LLaMa"],"github":"","external":""},"html":"<p>• Developed a question generation tool that set question papers according to user inputted subject areas, question\r\ntypes and difficulty levels leveraging LLaMa models.\r\n• 7B Model fine tuned using QLoRa and PeFT. Dataset synthesized using GPT-4.</p>"}},{"node":{"frontmatter":{"title":"Predicting Flight Delays","tech":["Python","Selenium","BeautifulSoup","pandas","R"],"github":"","external":""},"html":"<p>• Exploratory analysis of causes of flight delays across the US including weather conditions, cascading delays and\r\ngeographic location.</p>\n<p>• Predictive models built to predict flight delay utilising LSTM and XGBoost.</p>\n<p>• 30 GB of flight delay and weather data scraped using Python, Selenium and BeautifulSoup.</p>"}},{"node":{"frontmatter":{"title":"Text-to-Speech Assistant for ChatGPT","tech":["Python","JavaScript","GPT"],"github":"","external":""},"html":"<p>• Developed a full-stack web application that includes a virtual assistant that can respond to audio queries.</p>\n<p>• Audio transcribed to text using Whisper, OpenAI APIs for answering queries and ElevenLabs for converting text to\r\naudio. Web application built using Python, HTML and JavaScript</p>"}},{"node":{"frontmatter":{"title":"Eye Disease Identifier","tech":["Python","Keras","TensorFlow"],"github":"","external":""},"html":"<p>• Model to classify eyes based on condition built using ML algorithms. Developed on Colab using public datasets.</p>\n<p>• Keras CNN model with EfficientNetB3 model pre-trained on ImageNet data used for training. Global average\r\npooling layer used to reduce spatial dimensionality, ReLU activation for feature extraction and softmax activation\r\nfor producing probabilities. Model compiled using a Adam optimizer and returns an accuracy of 89%.</p>"}},{"node":{"frontmatter":{"title":"Book Recommender System","tech":["Keras","TensorFlow","Node    .js","Firebase"],"github":"","external":""},"html":"<p>• Developed a book recommendation system for beginners. Delivers personalized recommendations considering user\r\npreferences in analogous media - comics, TV, movies.</p>\n<p>• Developed in Python using pandas, scikit-learn. Deployed using Firebase.</p>"}},{"node":{"frontmatter":{"title":"Formula One Race Predictor","tech":["Python","sklearn","PyTorch","Matplotlib","Numpy","pandas"],"github":"","external":""},"html":"<p>• Trained a neural network model on historical data and used it to predict the outcomes of races for any driver.</p>\n<p>• Data colected from the Ergast API before being preprocessed, trained, encoded using one-hot encoder and\r\nevaluated. Model achieved a MSE of around 3.23.</p>"}},{"node":{"frontmatter":{"title":"NES Rust Emulator","tech":["Rust","SDL2"],"github":"","external":""},"html":"<p>• Leveraged Rust and SDL2 to build and run an emulator for the NES(Nintendo Emulator System).</p>\n<p>• Currently supports first-gen static screen games like Donkey Kong and Pac-Man.</p>"}},{"node":{"frontmatter":{"title":"Blockchain based Supply Chain App","tech":["Python","Flask","JavaScript","jQuery","React"],"github":"","external":""},"html":"<p>• Developed a full-stack web application using Python with Flask serving a REST API with the dashboards\r\nimplemented using HTML/CSS/JavaScript from scratch.</p>\n<p>• Simulated a blockchain with public/private keys generated using RSA and Proof-of-Work mining done using\r\nSHA-256.</p>"}},{"node":{"frontmatter":{"title":"Discord Bots","tech":["Python","JavaScript","Node.js"],"github":"","external":""},"html":"<p>• Developed a bot that let quiz club members run quizzes on Discord as our club transitioned online during COVID.\r\nA host would run questions throught the bot, which would manage scores, participants and cycle through different\r\nrounds. Other bots made include a spelling bee bot in javascript, a guess the song bot among others</p>"}}]}}}